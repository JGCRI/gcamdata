% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zaglu_xml_prune_empty_ag.R
\name{module_aglu_prune_empty_ag_xml}
\alias{module_aglu_prune_empty_ag_xml}
\title{module_aglu_prune_empty_ag_xml}
\usage{
module_aglu_prune_empty_ag_xml(command, ...)
}
\arguments{
\item{command}{API command to execute}

\item{...}{other optional parameters, depending on command}
}
\value{
Depends on \code{command}: either a vector of required inputs,
a vector of output names, or (if \code{command} is "MAKE") all
the generated outputs: \code{prune_empty_ag.xml}. (aglu XML).
}
\description{
Construct XML data structure for \code{prune_empty_ag.xml}.  Through the
process of processing the myriad of AgLu data we end up with many combinations
of crop/tech and land node/leaf which have zero production / land allocation
in any historical year.  Given, with the exception of biomass, having no historical
values means zero future potential these combinations are just wasted space.  Ideally,
this would be filtered out in the data processing saving time and reducing XML size.
However, doing so would be fairly intrusive as it will touch hundreds of objects and
in some cases we will prune pretty far up the tree making it less than straightforward.
Thus this minimally intrusive approach: Instruct GCAM to delete=1 the "empty" crop/tech
land node/leaf in the last scenario component parsed (note: it is safe to parse this XML
multiple times, useful in large batch runs where custom inputs may need pruning too)
}
